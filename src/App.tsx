// ğŸ”¹ Ã‰rtesÃ­tÃ©sek megjelenÃ­tÃ©sÃ©re szolgÃ¡lÃ³ komponensek
import { Toaster } from "@/components/ui/toaster";  
import { Toaster as Sonner } from "@/components/ui/sonner";  

// ğŸ”¹ Tooltip-ek (kis lebegÅ‘ informÃ¡ciÃ³s ablakok) mÅ±kÃ¶dÃ©sÃ©hez kell
import { TooltipProvider } from "@/components/ui/tooltip";  

// ğŸ”¹ Az adatok gyorsabb lekÃ©rdezÃ©sÃ©hez hasznÃ¡lt eszkÃ¶z (TanStack Query)
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";  

// ğŸ”¹ Az oldalak kÃ¶zÃ¶tti navigÃ¡ciÃ³t biztosÃ­tÃ³ eszkÃ¶z (React Router)
import { BrowserRouter, Routes, Route } from "react-router-dom";  

// ğŸ”¹ Az autentikÃ¡ciÃ³s (bejelentkezÃ©si) rendszer szolgÃ¡ltatÃ³ja
import { AuthProvider } from "./contexts/AuthContext";  

// ğŸ”¹ Az alkalmazÃ¡s egyes oldalai
import Index from "./pages/Index";  // FÅ‘oldal
import NotFound from "./pages/NotFound";  // 404-es hibaoldal (ha az oldal nem talÃ¡lhatÃ³)
import Coaches from "./pages/Coaches";  // EdzÅ‘k listÃ¡zÃ¡sa
import Community from "./pages/Community";  // KÃ¶zÃ¶ssÃ©gi oldal

// ğŸ”¹ LÃ©trehozza az adatlekÃ©rdezÃ©s kezelÃ©sÃ©re szolgÃ¡lÃ³ klienst
const queryClient = new QueryClient();

const App = () => (
  // ğŸ”¹ Az egÃ©sz alkalmazÃ¡sban lehetÅ‘vÃ© teszi az adatlekÃ©rdezÃ©seket
  <QueryClientProvider client={queryClient}>
  
    {/* ğŸ”¹ Az autentikÃ¡ciÃ³s rendszer elÃ©rhetÅ‘vÃ© teszi a felhasznÃ¡lÃ³i adatokat */}
    <AuthProvider>
    
      {/* ğŸ”¹ A tooltip-ek (lebegÅ‘ informÃ¡ciÃ³s ablakok) mÅ±kÃ¶dÃ©sÃ©t biztosÃ­tja */}
      <TooltipProvider>
      
        {/* ğŸ”¹ KÃ©tfÃ©le Ã©rtesÃ­tÃ©skezelÅ‘ rendszer beÃ¡llÃ­tÃ¡sa */}
        <Toaster />  
        <Sonner />  

        {/* ğŸ”¹ Az oldal navigÃ¡ciÃ³jÃ¡t kezeli */}
        <BrowserRouter>
          <Routes>
            <Route path="/" element={<Index />} />  {/* ğŸ”¹ FÅ‘oldal */}
            <Route path="/coaches" element={<Coaches />} />  {/* ğŸ”¹ EdzÅ‘k oldala */}
            <Route path="/community" element={<Community />} />  {/* ğŸ”¹ KÃ¶zÃ¶ssÃ©gi oldal */}
            <Route path="*" element={<NotFound />} />  {/* ğŸ”¹ Ha az oldal nem lÃ©tezik, a 404-es oldal jelenik meg */}
          </Routes>
        </BrowserRouter>
        
      </TooltipProvider>
    </AuthProvider>
  </QueryClientProvider>
);

export default App;  // ğŸ”¹ Az App komponenst elÃ©rhetÅ‘vÃ© teszi mÃ¡s fÃ¡jlok szÃ¡mÃ¡ra

/* 
Az oldal szerepe:
- LehetÅ‘vÃ© teszi az oldalak kÃ¶zÃ¶tti vÃ¡ltÃ¡st (React Router).
- Kezeli az Ã©rtesÃ­tÃ©seket (Toaster, Sonner).
- BiztosÃ­tja az autentikÃ¡ciÃ³s rendszert (AuthProvider).
- Gyorsabb adatlekÃ©rdezÃ©st tesz lehetÅ‘vÃ© (QueryClientProvider).
- Tooltip-ek (kis lebegÅ‘ informÃ¡ciÃ³k) mÅ±kÃ¶dÃ©sÃ©t biztosÃ­tja (TooltipProvider).

Hogyan mÅ±kÃ¶dik ez az alkalmazÃ¡s?
- A BrowserRouter segÃ­tsÃ©gÃ©vel a felhasznÃ¡lÃ³ navigÃ¡lhat az oldalak kÃ¶zÃ¶tt.
- Ha a felhasznÃ¡lÃ³ az /coaches oldalra megy, a Coaches komponens tÃ¶ltÅ‘dik be.
- Ha az URL nem lÃ©tezik, a NotFound (404) oldal jelenik meg.
- A QueryClientProvider gyorsÃ­tja az API lekÃ©rdezÃ©seket, Ã­gy az oldal gyorsabban tÃ¶lt be.
- Az AuthProvider lehetÅ‘vÃ© teszi a bejelentkezÃ©si Ã¡llapot tÃ¡rolÃ¡sÃ¡t az egÃ©sz alkalmazÃ¡sban.
*/

